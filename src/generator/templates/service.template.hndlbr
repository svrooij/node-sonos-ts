// Automatically generated by service-generator.js, don't change!
import { BaseService } from './base-service';
{{#if parsed.imports}}
import { {{#each parsed.imports}}{{this}}{{#unless @last}}, {{/unless}}{{/each}} } from '../models';
{{/if}}

{{#if docs.Description}}
/**
 * {{docs.Description}}
 *
 * @export
 * @class {{svcName}}
 * @extends {BaseService}
 */
{{/if}}
export class {{svcName}} extends BaseService {
  readonly serviceNane: string = '{{name}}';
  readonly controlUrl: string = '{{controlURL}}';  
  readonly eventSubUrl: string = '{{eventSubURL}}';
  readonly scpUrl: string = '{{SCPDURL}}';

  //#region methods
  {{#each parsed.methods}}
  {{#if parameters}}
  {{name}}(input: { {{#each parameters}}{{name}}: {{relatedStateVariable.ttype}}{{#unless @last}}; {{/unless}}{{/each}} }{{{defaultInput}}}):
    {{#if responseType}}
    Promise<{{responseType}}>{ return this.SoapRequestWithBody<typeof input, {{responseType}}>('{{name}}', input); }
    {{else}}
    Promise<boolean> { return this.SoapRequestWithBodyNoResponse<typeof input>('{{name}}', input); }
    {{/if}}
  {{else}}
  {{name}}():
    {{#if responseType}}
    Promise<{{responseType}}>{ return this.SoapRequest<{{responseType}}>('{{name}}'); }
    {{else}}
    Promise<boolean> { return this.SoapRequestNoResponse('{{name}}'); }
    {{/if}}
  {{/if}}
  {{#unless @last}}

  {{/unless}}
  {{/each}}
  //#endregion
}

// Generated responses
{{#each parsed.responses}}
export interface {{name}} {
  {{#each properties}}
  {{name}}: {{relatedStateVariable.ttype}};
  {{/each}}
}{{#unless @last}}

{{/unless}}{{/each}}
